import logging
import os
from aiogram import Bot, Dispatcher, types, F
from aiogram.fsm.context import FSMContext
from aiogram.fsm.storage.memory import MemoryStorage
from aiogram.types import Message, ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove, FSInputFile
from aiogram.filters import Command
from dotenv import load_dotenv
from pathlib import Path

# –Ø–≤–Ω–æ –≥—Ä—É–∑–∏–º .env –∏–∑ –∫–æ—Ä–Ω—è –ø—Ä–æ–µ–∫—Ç–∞
load_dotenv(dotenv_path=Path(__file__).parent.parent / '.env')

BOT_TOKEN = os.getenv('BOT_TOKEN')
print('DEBUG BOT_TOKEN:', BOT_TOKEN)
if not BOT_TOKEN or not BOT_TOKEN.startswith('7'):
    raise RuntimeError('BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –Ω–µ–≤–∞–ª–∏–¥–µ–Ω! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ .env –∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ activate_bot.sh')

from .fsm_handlers import router as fsm_router

logging.basicConfig(level=logging.INFO)

bot = Bot(token=BOT_TOKEN)
dp = Dispatcher(storage=MemoryStorage())
dp.include_router(fsm_router)

@dp.message(Command('start'))
async def cmd_start(message: Message, state: FSMContext):
    await state.clear()
    await message.answer('–ü—Ä–∏–º–µ—Ä—ã —Ä–∞–±–æ—Ç:')
    examples = [
        {'file': 'bot/photos/1.png', 'caption': '–ì–æ—Å—Ç–∏–Ω–∞—è —Å –º–Ω–æ–≥–æ—É—Ä–æ–≤–Ω–µ–≤—ã–º –ø–æ—Ç–æ–ª–∫–æ–º'},
        {'file': 'bot/photos/2.jpg', 'caption': '–ö—É—Ö–Ω—è —Å –ø–æ–¥—Å–≤–µ—Ç–∫–æ–π'},
        {'file': 'bot/photos/3.jpg', 'caption': '–°–ø–∞–ª—å–Ω—è —Å —Ñ–æ—Ç–æ–ø–µ—á–∞—Ç—å—é'},
        {'file': 'bot/photos/4.jpg', 'caption': '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π –±–µ–ª—ã–π –ø–æ—Ç–æ–ª–æ–∫'},
        {'file': 'bot/photos/5.jpg', 'caption': '–ü–æ—Ç–æ–ª–æ–∫ —Å —Ç–æ—á–µ—á–Ω—ã–º–∏ —Å–≤–µ—Ç–∏–ª—å–Ω–∏–∫–∞–º–∏'},
    ]
    for ex in examples:
        photo = FSInputFile(ex['file'])
        await message.answer_photo(photo, caption=ex['caption'])
    await message.answer(
        'üëã –î–æ–±—Ä—ã–π –¥–µ–Ω—å!\n–ú–µ–Ω—è –∑–æ–≤—É—Ç –º–∞—Å—Ç–µ—Ä –†–æ–º–∞–Ω –∏ —è –≥–æ—Ç–æ–≤ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –≤–∞—à –∑–∞–∫–∞–∑.\n\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–µ–¥—Å—Ç–∞–≤—å—Ç–µ—Å—å (–Ω–∞–ø–∏—à–∏—Ç–µ –í–∞—à–µ –∏–º—è).',
        reply_markup=ReplyKeyboardRemove()
    )
    from .states import OrderFSM
    await state.set_state(OrderFSM.name)

if __name__ == '__main__':
    import asyncio
    asyncio.run(dp.start_polling(bot)) 